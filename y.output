Terminals unused in grammar

   TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: progrElements

    2 progrElements: funcDeclaration progrElements
    3              | varDeclaration progrElements
    4              | %empty

    5 name: TK_IDENTIFIER

    6 vector: name 'q' expression 'p'

    7 type: KW_CHAR
    8     | KW_INT
    9     | KW_FLOAT

   10 literal: LIT_INTEGER
   11        | LIT_FLOAT
   12        | LIT_CHAR

   13 funcDeclaration: type name 'd' parameterList 'b' cmd

   14 cmdBlock: '{' cmdList '}'

   15 cmdList: cmd ';' cmdList
   16        | %empty

   17 cmd: attribution
   18    | KW_IF expression KW_THEN cmd
   19    | KW_IF expression KW_THEN cmd KW_ELSE cmd
   20    | KW_WHILE expression cmd
   21    | KW_READ name
   22    | KW_PRINT printList
   23    | KW_RETURN expression
   24    | cmdBlock
   25    | %empty

   26 printList: LIT_STRING ',' printList
   27          | expression ',' printList
   28          | LIT_STRING
   29          | expression

   30 parameterList: type name ',' parameterList
   31              | type name
   32              | %empty

   33 litList: literal
   34        | literal litList

   35 argList: expression ',' argList
   36        | expression

   37 varDeclaration: type name '=' expression ';'
   38               | type name 'q' LIT_INTEGER 'p' ';'
   39               | type name 'q' LIT_INTEGER 'p' ':' litList ';'

   40 attribution: name '=' expression
   41            | vector '=' expression

   42 expression: literal
   43           | name
   44           | vector
   45           | expression '+' expression
   46           | expression '-' expression
   47           | expression '*' expression
   48           | expression '/' expression
   49           | expression '<' expression
   50           | expression '>' expression
   51           | expression OPERATOR_LE expression
   52           | expression OPERATOR_GE expression
   53           | expression OPERATOR_EQ expression
   54           | expression OPERATOR_OR expression
   55           | expression OPERATOR_AND expression
   56           | OPERATOR_NOT expression
   57           | 'd' expression 'b'
   58           | name 'd' argList 'b'


Terminals, with rules where they appear

$end (0) 0
'*' (42) 47
'+' (43) 45
',' (44) 26 27 30 35
'-' (45) 46
'/' (47) 48
':' (58) 39
';' (59) 15 37 38 39
'<' (60) 49
'=' (61) 37 40 41
'>' (62) 50
'b' (98) 13 57 58
'd' (100) 13 57 58
'p' (112) 6 38 39
'q' (113) 6 38 39
'{' (123) 14
'}' (125) 14
error (256)
KW_CHAR (258) 7
KW_INT (259) 8
KW_FLOAT (260) 9
KW_IF (261) 18 19
KW_THEN (262) 18 19
KW_ELSE (263) 19
KW_WHILE (264) 20
KW_READ (265) 21
KW_RETURN (266) 23
KW_PRINT (267) 22
OPERATOR_LE (268) 51
OPERATOR_GE (269) 52
OPERATOR_EQ (270) 53
OPERATOR_OR (271) 54
OPERATOR_AND (272) 55
OPERATOR_NOT (273) 56
TK_IDENTIFIER (274) 5
LIT_INTEGER (275) 10 38 39
LIT_FLOAT (276) 11
LIT_CHAR (277) 12
LIT_STRING (278) 26 28
TOKEN_ERROR (279)
LOWER_THAN_ELSE (280)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
progrElements (44)
    on left: 2 3 4, on right: 1 2 3
name (45)
    on left: 5, on right: 6 13 21 30 31 37 38 39 40 43 58
vector (46)
    on left: 6, on right: 41 44
type (47)
    on left: 7 8 9, on right: 13 30 31 37 38 39
literal (48)
    on left: 10 11 12, on right: 33 34 42
funcDeclaration (49)
    on left: 13, on right: 2
cmdBlock (50)
    on left: 14, on right: 24
cmdList (51)
    on left: 15 16, on right: 14 15
cmd (52)
    on left: 17 18 19 20 21 22 23 24 25, on right: 13 15 18 19 20
printList (53)
    on left: 26 27 28 29, on right: 22 26 27
parameterList (54)
    on left: 30 31 32, on right: 13 30
litList (55)
    on left: 33 34, on right: 34 39
argList (56)
    on left: 35 36, on right: 35 58
varDeclaration (57)
    on left: 37 38 39, on right: 3
attribution (58)
    on left: 40 41, on right: 17
expression (59)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58, on right:
    6 18 19 20 23 27 29 35 36 37 40 41 45 46 47 48 49 50 51 52 53 54
    55 56 57


State 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (progrElements)

    program          go to state 4
    progrElements    go to state 5
    type             go to state 6
    funcDeclaration  go to state 7
    varDeclaration   go to state 8


State 1

    7 type: KW_CHAR .

    $default  reduce using rule 7 (type)


State 2

    8 type: KW_INT .

    $default  reduce using rule 8 (type)


State 3

    9 type: KW_FLOAT .

    $default  reduce using rule 9 (type)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 9


State 5

    1 program: progrElements .

    $default  reduce using rule 1 (program)


State 6

   13 funcDeclaration: type . name 'd' parameterList 'b' cmd
   37 varDeclaration: type . name '=' expression ';'
   38               | type . name 'q' LIT_INTEGER 'p' ';'
   39               | type . name 'q' LIT_INTEGER 'p' ':' litList ';'

    TK_IDENTIFIER  shift, and go to state 10

    name  go to state 11


State 7

    2 progrElements: funcDeclaration . progrElements

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (progrElements)

    progrElements    go to state 12
    type             go to state 6
    funcDeclaration  go to state 7
    varDeclaration   go to state 8


State 8

    3 progrElements: varDeclaration . progrElements

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (progrElements)

    progrElements    go to state 13
    type             go to state 6
    funcDeclaration  go to state 7
    varDeclaration   go to state 8


State 9

    0 $accept: program $end .

    $default  accept


State 10

    5 name: TK_IDENTIFIER .

    $default  reduce using rule 5 (name)


State 11

   13 funcDeclaration: type name . 'd' parameterList 'b' cmd
   37 varDeclaration: type name . '=' expression ';'
   38               | type name . 'q' LIT_INTEGER 'p' ';'
   39               | type name . 'q' LIT_INTEGER 'p' ':' litList ';'

    'q'  shift, and go to state 14
    'd'  shift, and go to state 15
    '='  shift, and go to state 16


State 12

    2 progrElements: funcDeclaration progrElements .

    $default  reduce using rule 2 (progrElements)


State 13

    3 progrElements: varDeclaration progrElements .

    $default  reduce using rule 3 (progrElements)


State 14

   38 varDeclaration: type name 'q' . LIT_INTEGER 'p' ';'
   39               | type name 'q' . LIT_INTEGER 'p' ':' litList ';'

    LIT_INTEGER  shift, and go to state 17


State 15

   13 funcDeclaration: type name 'd' . parameterList 'b' cmd

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 32 (parameterList)

    type           go to state 18
    parameterList  go to state 19


State 16

   37 varDeclaration: type name '=' . expression ';'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 28


State 17

   38 varDeclaration: type name 'q' LIT_INTEGER . 'p' ';'
   39               | type name 'q' LIT_INTEGER . 'p' ':' litList ';'

    'p'  shift, and go to state 29


State 18

   30 parameterList: type . name ',' parameterList
   31              | type . name

    TK_IDENTIFIER  shift, and go to state 10

    name  go to state 30


State 19

   13 funcDeclaration: type name 'd' parameterList . 'b' cmd

    'b'  shift, and go to state 31


State 20

   56 expression: OPERATOR_NOT . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 32


State 21

   10 literal: LIT_INTEGER .

    $default  reduce using rule 10 (literal)


State 22

   11 literal: LIT_FLOAT .

    $default  reduce using rule 11 (literal)


State 23

   12 literal: LIT_CHAR .

    $default  reduce using rule 12 (literal)


State 24

   57 expression: 'd' . expression 'b'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 33


State 25

    6 vector: name . 'q' expression 'p'
   43 expression: name .
   58           | name . 'd' argList 'b'

    'q'  shift, and go to state 34
    'd'  shift, and go to state 35

    $default  reduce using rule 43 (expression)


State 26

   44 expression: vector .

    $default  reduce using rule 44 (expression)


State 27

   42 expression: literal .

    $default  reduce using rule 42 (expression)


State 28

   37 varDeclaration: type name '=' expression . ';'
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46
    ';'           shift, and go to state 47


State 29

   38 varDeclaration: type name 'q' LIT_INTEGER 'p' . ';'
   39               | type name 'q' LIT_INTEGER 'p' . ':' litList ';'

    ';'  shift, and go to state 48
    ':'  shift, and go to state 49


State 30

   30 parameterList: type name . ',' parameterList
   31              | type name .

    ','  shift, and go to state 50

    $default  reduce using rule 31 (parameterList)


State 31

   13 funcDeclaration: type name 'd' parameterList 'b' . cmd

    KW_IF          shift, and go to state 51
    KW_WHILE       shift, and go to state 52
    KW_READ        shift, and go to state 53
    KW_RETURN      shift, and go to state 54
    KW_PRINT       shift, and go to state 55
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 56

    $default  reduce using rule 25 (cmd)

    name         go to state 57
    vector       go to state 58
    cmdBlock     go to state 59
    cmd          go to state 60
    attribution  go to state 61


State 32

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression
   56           | OPERATOR_NOT expression .

    $default  reduce using rule 56 (expression)


State 33

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression
   57           | 'd' expression . 'b'

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46
    'b'           shift, and go to state 62


State 34

    6 vector: name 'q' . expression 'p'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 63


State 35

   58 expression: name 'd' . argList 'b'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    argList     go to state 64
    expression  go to state 65


State 36

   51 expression: expression OPERATOR_LE . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 66


State 37

   52 expression: expression OPERATOR_GE . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 67


State 38

   53 expression: expression OPERATOR_EQ . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 68


State 39

   54 expression: expression OPERATOR_OR . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 69


State 40

   55 expression: expression OPERATOR_AND . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 70


State 41

   49 expression: expression '<' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 71


State 42

   50 expression: expression '>' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 72


State 43

   45 expression: expression '+' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 73


State 44

   46 expression: expression '-' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 74


State 45

   47 expression: expression '*' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 75


State 46

   48 expression: expression '/' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 76


State 47

   37 varDeclaration: type name '=' expression ';' .

    $default  reduce using rule 37 (varDeclaration)


State 48

   38 varDeclaration: type name 'q' LIT_INTEGER 'p' ';' .

    $default  reduce using rule 38 (varDeclaration)


State 49

   39 varDeclaration: type name 'q' LIT_INTEGER 'p' ':' . litList ';'

    LIT_INTEGER  shift, and go to state 21
    LIT_FLOAT    shift, and go to state 22
    LIT_CHAR     shift, and go to state 23

    literal  go to state 77
    litList  go to state 78


State 50

   30 parameterList: type name ',' . parameterList

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 32 (parameterList)

    type           go to state 18
    parameterList  go to state 79


State 51

   18 cmd: KW_IF . expression KW_THEN cmd
   19    | KW_IF . expression KW_THEN cmd KW_ELSE cmd

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 80


State 52

   20 cmd: KW_WHILE . expression cmd

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 81


State 53

   21 cmd: KW_READ . name

    TK_IDENTIFIER  shift, and go to state 10

    name  go to state 82


State 54

   23 cmd: KW_RETURN . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 83


State 55

   22 cmd: KW_PRINT . printList

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 84
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    printList   go to state 85
    expression  go to state 86


State 56

   14 cmdBlock: '{' . cmdList '}'

    KW_IF          shift, and go to state 51
    KW_WHILE       shift, and go to state 52
    KW_READ        shift, and go to state 53
    KW_RETURN      shift, and go to state 54
    KW_PRINT       shift, and go to state 55
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 56

    ';'       reduce using rule 25 (cmd)
    $default  reduce using rule 16 (cmdList)

    name         go to state 57
    vector       go to state 58
    cmdBlock     go to state 59
    cmdList      go to state 87
    cmd          go to state 88
    attribution  go to state 61


State 57

    6 vector: name . 'q' expression 'p'
   40 attribution: name . '=' expression

    'q'  shift, and go to state 34
    '='  shift, and go to state 89


State 58

   41 attribution: vector . '=' expression

    '='  shift, and go to state 90


State 59

   24 cmd: cmdBlock .

    $default  reduce using rule 24 (cmd)


State 60

   13 funcDeclaration: type name 'd' parameterList 'b' cmd .

    $default  reduce using rule 13 (funcDeclaration)


State 61

   17 cmd: attribution .

    $default  reduce using rule 17 (cmd)


State 62

   57 expression: 'd' expression 'b' .

    $default  reduce using rule 57 (expression)


State 63

    6 vector: name 'q' expression . 'p'
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46
    'p'           shift, and go to state 91


State 64

   58 expression: name 'd' argList . 'b'

    'b'  shift, and go to state 92


State 65

   35 argList: expression . ',' argList
   36        | expression .
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46
    ','           shift, and go to state 93

    $default  reduce using rule 36 (argList)


State 66

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   51           | expression OPERATOR_LE expression .
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 51 (expression)


State 67

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   52           | expression OPERATOR_GE expression .
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 52 (expression)


State 68

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   53           | expression OPERATOR_EQ expression .
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 53 (expression)


State 69

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   54           | expression OPERATOR_OR expression .
   55           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 54 (expression)


State 70

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression
   55           | expression OPERATOR_AND expression .

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 55 (expression)


State 71

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   49           | expression '<' expression .
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 49 (expression)


State 72

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   50           | expression '>' expression .
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 50 (expression)


State 73

   45 expression: expression . '+' expression
   45           | expression '+' expression .
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 45 (expression)


State 74

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   46           | expression '-' expression .
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 46 (expression)


State 75

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   47           | expression '*' expression .
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    $default  reduce using rule 47 (expression)


State 76

   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   48           | expression '/' expression .
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    $default  reduce using rule 48 (expression)


State 77

   33 litList: literal .
   34        | literal . litList

    LIT_INTEGER  shift, and go to state 21
    LIT_FLOAT    shift, and go to state 22
    LIT_CHAR     shift, and go to state 23

    $default  reduce using rule 33 (litList)

    literal  go to state 77
    litList  go to state 94


State 78

   39 varDeclaration: type name 'q' LIT_INTEGER 'p' ':' litList . ';'

    ';'  shift, and go to state 95


State 79

   30 parameterList: type name ',' parameterList .

    $default  reduce using rule 30 (parameterList)


State 80

   18 cmd: KW_IF expression . KW_THEN cmd
   19    | KW_IF expression . KW_THEN cmd KW_ELSE cmd
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    KW_THEN       shift, and go to state 96
    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46


State 81

   20 cmd: KW_WHILE expression . cmd
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    KW_IF          shift, and go to state 51
    KW_WHILE       shift, and go to state 52
    KW_READ        shift, and go to state 53
    KW_RETURN      shift, and go to state 54
    KW_PRINT       shift, and go to state 55
    OPERATOR_LE    shift, and go to state 36
    OPERATOR_GE    shift, and go to state 37
    OPERATOR_EQ    shift, and go to state 38
    OPERATOR_OR    shift, and go to state 39
    OPERATOR_AND   shift, and go to state 40
    TK_IDENTIFIER  shift, and go to state 10
    '<'            shift, and go to state 41
    '>'            shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '*'            shift, and go to state 45
    '/'            shift, and go to state 46
    '{'            shift, and go to state 56

    $default  reduce using rule 25 (cmd)

    name         go to state 57
    vector       go to state 58
    cmdBlock     go to state 59
    cmd          go to state 97
    attribution  go to state 61


State 82

   21 cmd: KW_READ name .

    $default  reduce using rule 21 (cmd)


State 83

   23 cmd: KW_RETURN expression .
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46

    $default  reduce using rule 23 (cmd)


State 84

   26 printList: LIT_STRING . ',' printList
   28          | LIT_STRING .

    ','  shift, and go to state 98

    $default  reduce using rule 28 (printList)


State 85

   22 cmd: KW_PRINT printList .

    $default  reduce using rule 22 (cmd)


State 86

   27 printList: expression . ',' printList
   29          | expression .
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46
    ','           shift, and go to state 99

    $default  reduce using rule 29 (printList)


State 87

   14 cmdBlock: '{' cmdList . '}'

    '}'  shift, and go to state 100


State 88

   15 cmdList: cmd . ';' cmdList

    ';'  shift, and go to state 101


State 89

   40 attribution: name '=' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 102


State 90

   41 attribution: vector '=' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    expression  go to state 103


State 91

    6 vector: name 'q' expression 'p' .

    $default  reduce using rule 6 (vector)


State 92

   58 expression: name 'd' argList 'b' .

    $default  reduce using rule 58 (expression)


State 93

   35 argList: expression ',' . argList

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    argList     go to state 104
    expression  go to state 65


State 94

   34 litList: literal litList .

    $default  reduce using rule 34 (litList)


State 95

   39 varDeclaration: type name 'q' LIT_INTEGER 'p' ':' litList ';' .

    $default  reduce using rule 39 (varDeclaration)


State 96

   18 cmd: KW_IF expression KW_THEN . cmd
   19    | KW_IF expression KW_THEN . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 51
    KW_WHILE       shift, and go to state 52
    KW_READ        shift, and go to state 53
    KW_RETURN      shift, and go to state 54
    KW_PRINT       shift, and go to state 55
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 56

    $default  reduce using rule 25 (cmd)

    name         go to state 57
    vector       go to state 58
    cmdBlock     go to state 59
    cmd          go to state 105
    attribution  go to state 61


State 97

   20 cmd: KW_WHILE expression cmd .

    $default  reduce using rule 20 (cmd)


State 98

   26 printList: LIT_STRING ',' . printList

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 84
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    printList   go to state 106
    expression  go to state 86


State 99

   27 printList: expression ',' . printList

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 84
    'd'            shift, and go to state 24

    name        go to state 25
    vector      go to state 26
    literal     go to state 27
    printList   go to state 107
    expression  go to state 86


State 100

   14 cmdBlock: '{' cmdList '}' .

    $default  reduce using rule 14 (cmdBlock)


State 101

   15 cmdList: cmd ';' . cmdList

    KW_IF          shift, and go to state 51
    KW_WHILE       shift, and go to state 52
    KW_READ        shift, and go to state 53
    KW_RETURN      shift, and go to state 54
    KW_PRINT       shift, and go to state 55
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 56

    ';'       reduce using rule 25 (cmd)
    $default  reduce using rule 16 (cmdList)

    name         go to state 57
    vector       go to state 58
    cmdBlock     go to state 59
    cmdList      go to state 108
    cmd          go to state 88
    attribution  go to state 61


State 102

   40 attribution: name '=' expression .
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46

    $default  reduce using rule 40 (attribution)


State 103

   41 attribution: vector '=' expression .
   45 expression: expression . '+' expression
   46           | expression . '-' expression
   47           | expression . '*' expression
   48           | expression . '/' expression
   49           | expression . '<' expression
   50           | expression . '>' expression
   51           | expression . OPERATOR_LE expression
   52           | expression . OPERATOR_GE expression
   53           | expression . OPERATOR_EQ expression
   54           | expression . OPERATOR_OR expression
   55           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 36
    OPERATOR_GE   shift, and go to state 37
    OPERATOR_EQ   shift, and go to state 38
    OPERATOR_OR   shift, and go to state 39
    OPERATOR_AND  shift, and go to state 40
    '<'           shift, and go to state 41
    '>'           shift, and go to state 42
    '+'           shift, and go to state 43
    '-'           shift, and go to state 44
    '*'           shift, and go to state 45
    '/'           shift, and go to state 46

    $default  reduce using rule 41 (attribution)


State 104

   35 argList: expression ',' argList .

    $default  reduce using rule 35 (argList)


State 105

   18 cmd: KW_IF expression KW_THEN cmd .
   19    | KW_IF expression KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 109

    $default  reduce using rule 18 (cmd)


State 106

   26 printList: LIT_STRING ',' printList .

    $default  reduce using rule 26 (printList)


State 107

   27 printList: expression ',' printList .

    $default  reduce using rule 27 (printList)


State 108

   15 cmdList: cmd ';' cmdList .

    $default  reduce using rule 15 (cmdList)


State 109

   19 cmd: KW_IF expression KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 51
    KW_WHILE       shift, and go to state 52
    KW_READ        shift, and go to state 53
    KW_RETURN      shift, and go to state 54
    KW_PRINT       shift, and go to state 55
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 56

    $default  reduce using rule 25 (cmd)

    name         go to state 57
    vector       go to state 58
    cmdBlock     go to state 59
    cmd          go to state 110
    attribution  go to state 61


State 110

   19 cmd: KW_IF expression KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 19 (cmd)
